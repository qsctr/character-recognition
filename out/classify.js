"use strict";
var App;
(function (App) {
    function classify(onOutput) {
        if (App.training) {
            onOutput({ type: 'blocked' });
            return;
        }
        const image = App.inputArea.getBuffer();
        const listener = ({ data }) => {
            if (data.type === 'classifyOutput') {
                if (data.output === null) {
                    onOutput({ type: 'fail' });
                }
                else {
                    onOutput({ type: 'success', char: data.output });
                }
                App.worker.removeEventListener('message', listener);
            }
        };
        App.worker.addEventListener('message', listener);
        App.worker.postMessage({
            type: 'classify',
            image
        }, [image]);
    }
    App.classify = classify;
})(App || (App = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xhc3NpZnkuanMiLCJzb3VyY2VSb290IjoiZDovU3R1ZGVudF9EYXRhL0dpdGh1Yi9jaGFyYWN0ZXItcmVjb2duaXRpb24vc3JjLyIsInNvdXJjZXMiOlsiY2xhc3NpZnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQVUsR0FBRyxDQThCWjtBQTlCRCxXQUFVLEdBQUc7SUFPVCxrQkFBeUIsUUFBeUM7UUFDOUQsRUFBRSxDQUFDLENBQUMsSUFBQSxRQUFRLENBQUMsQ0FBQyxDQUFDO1lBQ1gsUUFBUSxDQUFDLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUM7WUFDOUIsTUFBTSxDQUFDO1FBQ1gsQ0FBQztRQUNELE1BQU0sS0FBSyxHQUFHLElBQUEsU0FBUyxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ3BDLE1BQU0sUUFBUSxHQUFrQyxDQUFDLEVBQUUsSUFBSSxFQUEyQjtZQUM5RSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLGdCQUFnQixDQUFDLENBQUMsQ0FBQztnQkFDakMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDO29CQUN2QixRQUFRLENBQUMsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQztnQkFDL0IsQ0FBQztnQkFBQyxJQUFJLENBQUMsQ0FBQztvQkFDSixRQUFRLENBQUMsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztnQkFDckQsQ0FBQztnQkFDRCxJQUFBLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDLENBQUM7WUFDcEQsQ0FBQztRQUNMLENBQUMsQ0FBQztRQUNGLElBQUEsTUFBTSxDQUFDLGdCQUFnQixDQUFDLFNBQVMsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUM3QyxJQUFBLE1BQU0sQ0FBQyxXQUFXLENBQUM7WUFDZixJQUFJLEVBQUUsVUFBVTtZQUNoQixLQUFLO1NBQ08sRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQXJCZSxZQUFRLFdBcUJ2QixDQUFBO0FBRUwsQ0FBQyxFQTlCUyxHQUFHLEtBQUgsR0FBRyxRQThCWiIsInNvdXJjZXNDb250ZW50IjpbIm5hbWVzcGFjZSBBcHAge1xyXG5cclxuICAgIHR5cGUgQ2xhc3NpZnlPdXRwdXRcclxuICAgICAgICA9IHsgdHlwZTogJ3N1Y2Nlc3MnLCBjaGFyOiBzdHJpbmcgfVxyXG4gICAgICAgIHwgeyB0eXBlOiAnZmFpbCcgfVxyXG4gICAgICAgIHwgeyB0eXBlOiAnYmxvY2tlZCcgfTtcclxuXHJcbiAgICBleHBvcnQgZnVuY3Rpb24gY2xhc3NpZnkob25PdXRwdXQ6IChvdXRwdXQ6IENsYXNzaWZ5T3V0cHV0KSA9PiBhbnkpIHtcclxuICAgICAgICBpZiAodHJhaW5pbmcpIHtcclxuICAgICAgICAgICAgb25PdXRwdXQoeyB0eXBlOiAnYmxvY2tlZCcgfSk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgaW1hZ2UgPSBpbnB1dEFyZWEuZ2V0QnVmZmVyKCk7XHJcbiAgICAgICAgY29uc3QgbGlzdGVuZXI6IChldmVudDogTWVzc2FnZUV2ZW50KSA9PiB2b2lkID0gKHsgZGF0YSB9OiB7IGRhdGE6IFdvcmtlck1lc3NhZ2UgfSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZGF0YS50eXBlID09PSAnY2xhc3NpZnlPdXRwdXQnKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZGF0YS5vdXRwdXQgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICBvbk91dHB1dCh7IHR5cGU6ICdmYWlsJyB9KTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgb25PdXRwdXQoeyB0eXBlOiAnc3VjY2VzcycsIGNoYXI6IGRhdGEub3V0cHV0IH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgd29ya2VyLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBsaXN0ZW5lcik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIHdvcmtlci5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgbGlzdGVuZXIpO1xyXG4gICAgICAgIHdvcmtlci5wb3N0TWVzc2FnZSh7XHJcbiAgICAgICAgICAgIHR5cGU6ICdjbGFzc2lmeScsXHJcbiAgICAgICAgICAgIGltYWdlXHJcbiAgICAgICAgfSBhcyBNYWluTWVzc2FnZSwgW2ltYWdlXSk7XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==