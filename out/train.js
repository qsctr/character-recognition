"use strict";
var App;
(function (App) {
    App.training = false;
    App.trained = false;
    function train(onGenerating, onTraining, onFinished) {
        App.training = true;
        const trainingSets = [];
        let i = 0;
        const interval = setInterval(() => {
            if (i === App.chars.length) {
                clearInterval(interval);
                const listener = ({ data }) => {
                    switch (data.type) {
                        case 'training':
                            onTraining(data.char, data.current, App.chars.length);
                            break;
                        case 'trainFinished':
                            onFinished();
                            App.worker.removeEventListener('message', listener);
                            App.training = false;
                            App.trained = true;
                            break;
                    }
                };
                App.worker.addEventListener('message', listener);
                App.worker.postMessage({
                    type: 'train',
                    trainingSets
                }, [].concat(...trainingSets));
                return;
            }
            onGenerating(App.chars[i], i + 1, App.chars.length);
            trainingSets.push(Array.from({ length: App.trainingCopies }, (_, j) => {
                App.inputArea.renderChar(App.chars[i]);
                if (j !== 0) {
                    App.inputArea.addNoise();
                }
                return App.inputArea.getBuffer();
            }));
            i++;
        });
    }
    App.train = train;
})(App || (App = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhaW4uanMiLCJzb3VyY2VSb290IjoiZDovU3R1ZGVudF9EYXRhL0dpdGh1Yi9jaGFyYWN0ZXItcmVjb2duaXRpb24vc3JjLyIsInNvdXJjZXMiOlsidHJhaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQVUsR0FBRyxDQWlEWjtBQWpERCxXQUFVLEdBQUc7SUFFRSxZQUFRLEdBQUcsS0FBSyxDQUFDO0lBQ2pCLFdBQU8sR0FBRyxLQUFLLENBQUM7SUFFM0IsZUFDSSxZQUFtRSxFQUNuRSxVQUFpRSxFQUNqRSxVQUFxQjtRQUVyQixJQUFBLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDaEIsTUFBTSxZQUFZLEdBQUcsRUFBcUIsQ0FBQztRQUMzQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDVixNQUFNLFFBQVEsR0FBRyxXQUFXLENBQUM7WUFDekIsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLElBQUEsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7Z0JBQ3JCLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztnQkFDeEIsTUFBTSxRQUFRLEdBQ1YsQ0FBQyxFQUFFLElBQUksRUFBMkI7b0JBQzlCLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO3dCQUNoQixLQUFLLFVBQVU7NEJBQ1gsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFBLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQzs0QkFDbEQsS0FBSyxDQUFDO3dCQUNWLEtBQUssZUFBZTs0QkFDaEIsVUFBVSxFQUFFLENBQUM7NEJBQ2IsSUFBQSxNQUFNLENBQUMsbUJBQW1CLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDOzRCQUNoRCxJQUFBLFFBQVEsR0FBRyxLQUFLLENBQUM7NEJBQ2pCLElBQUEsT0FBTyxHQUFHLElBQUksQ0FBQzs0QkFDZixLQUFLLENBQUM7b0JBQ2QsQ0FBQztnQkFDTCxDQUFDLENBQUM7Z0JBQ04sSUFBQSxNQUFNLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDO2dCQUM3QyxJQUFBLE1BQU0sQ0FBQyxXQUFXLENBQUM7b0JBQ2YsSUFBSSxFQUFFLE9BQU87b0JBQ2IsWUFBWTtpQkFDQSxFQUFHLEVBQW9CLENBQUMsTUFBTSxDQUFDLEdBQUcsWUFBWSxDQUFDLENBQUMsQ0FBQztnQkFDakUsTUFBTSxDQUFDO1lBQ1gsQ0FBQztZQUNELFlBQVksQ0FBQyxJQUFBLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUEsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQzVDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFLE1BQU0sRUFBRSxJQUFBLGNBQWMsRUFBRSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUM7Z0JBQzFELElBQUEsU0FBUyxDQUFDLFVBQVUsQ0FBQyxJQUFBLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUMvQixFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztvQkFDVixJQUFBLFNBQVMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztnQkFDekIsQ0FBQztnQkFDRCxNQUFNLENBQUMsSUFBQSxTQUFTLENBQUMsU0FBUyxFQUFFLENBQUM7WUFDakMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNKLENBQUMsRUFBRSxDQUFDO1FBQ1IsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBMUNlLFNBQUssUUEwQ3BCLENBQUE7QUFFTCxDQUFDLEVBakRTLEdBQUcsS0FBSCxHQUFHLFFBaURaIiwic291cmNlc0NvbnRlbnQiOlsibmFtZXNwYWNlIEFwcCB7XHJcblxyXG4gICAgZXhwb3J0IGxldCB0cmFpbmluZyA9IGZhbHNlO1xyXG4gICAgZXhwb3J0IGxldCB0cmFpbmVkID0gZmFsc2U7XHJcblxyXG4gICAgZXhwb3J0IGZ1bmN0aW9uIHRyYWluKFxyXG4gICAgICAgIG9uR2VuZXJhdGluZzogKGNoYXI6IHN0cmluZywgY3VycmVudDogbnVtYmVyLCB0b3RhbDogbnVtYmVyKSA9PiBhbnksXHJcbiAgICAgICAgb25UcmFpbmluZzogKGNoYXI6IHN0cmluZywgY3VycmVudDogbnVtYmVyLCB0b3RhbDogbnVtYmVyKSA9PiBhbnksXHJcbiAgICAgICAgb25GaW5pc2hlZDogKCkgPT4gYW55XHJcbiAgICApIHtcclxuICAgICAgICB0cmFpbmluZyA9IHRydWU7XHJcbiAgICAgICAgY29uc3QgdHJhaW5pbmdTZXRzID0gW10gYXMgQXJyYXlCdWZmZXJbXVtdO1xyXG4gICAgICAgIGxldCBpID0gMDtcclxuICAgICAgICBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcclxuICAgICAgICAgICAgaWYgKGkgPT09IGNoYXJzLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBsaXN0ZW5lcjogKGV2ZW50OiBNZXNzYWdlRXZlbnQpID0+IHZvaWQgPVxyXG4gICAgICAgICAgICAgICAgICAgICh7IGRhdGEgfTogeyBkYXRhOiBXb3JrZXJNZXNzYWdlIH0pID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChkYXRhLnR5cGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ3RyYWluaW5nJzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblRyYWluaW5nKGRhdGEuY2hhciwgZGF0YS5jdXJyZW50LCBjaGFycy5sZW5ndGgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAndHJhaW5GaW5pc2hlZCc6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25GaW5pc2hlZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdvcmtlci5yZW1vdmVFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgbGlzdGVuZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYWluaW5nID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhaW5lZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgd29ya2VyLmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBsaXN0ZW5lcik7XHJcbiAgICAgICAgICAgICAgICB3b3JrZXIucG9zdE1lc3NhZ2Uoe1xyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICd0cmFpbicsXHJcbiAgICAgICAgICAgICAgICAgICAgdHJhaW5pbmdTZXRzXHJcbiAgICAgICAgICAgICAgICB9IGFzIE1haW5NZXNzYWdlLCAoW10gYXMgQXJyYXlCdWZmZXJbXSkuY29uY2F0KC4uLnRyYWluaW5nU2V0cykpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG9uR2VuZXJhdGluZyhjaGFyc1tpXSwgaSArIDEsIGNoYXJzLmxlbmd0aCk7XHJcbiAgICAgICAgICAgIHRyYWluaW5nU2V0cy5wdXNoKEFycmF5LmZyb20oeyBsZW5ndGg6IHRyYWluaW5nQ29waWVzIH0sIChfLCBqKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpbnB1dEFyZWEucmVuZGVyQ2hhcihjaGFyc1tpXSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoaiAhPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlucHV0QXJlYS5hZGROb2lzZSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGlucHV0QXJlYS5nZXRCdWZmZXIoKTtcclxuICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgICAgICBpKys7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBcclxufVxyXG4iXX0=