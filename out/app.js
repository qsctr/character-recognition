"use strict";
var App;
(function (App) {
    App.trainingCopies = 100;
    App.inputArea = new InputArea('#input-area');
    App.outputArea = new DisplayArea('#output-area');
    App.chars = range('a', 'z').concat(range('A', 'Z'), range('0', '9'), ' ');
    App.worker = new Worker('out-worker/main.js');
    App.initData = AppStorage.getPerceptronData();
    App.worker.postMessage({
        type: 'init',
        chars: App.chars,
        inputCount: App.inputArea.getSize(),
        initData: App.initData
    });
    function range(start, end) {
        const res = [];
        for (let i = start.charCodeAt(0); i <= end.charCodeAt(0); i++) {
            res.push(String.fromCharCode(i));
        }
        return res;
    }
})(App || (App = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6ImQ6L1N0dWRlbnRfRGF0YS9HaXRodWIvY2hhcmFjdGVyLXJlY29nbml0aW9uL3NyYy8iLCJzb3VyY2VzIjpbImFwcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBVSxHQUFHLENBeUJaO0FBekJELFdBQVUsR0FBRztJQUVJLGtCQUFjLEdBQUcsR0FBRyxDQUFDO0lBRXJCLGFBQVMsR0FBRyxJQUFJLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN6QyxjQUFVLEdBQUcsSUFBSSxXQUFXLENBQUMsY0FBYyxDQUFDLENBQUM7SUFFN0MsU0FBSyxHQUFHLEtBQUssQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLEVBQUUsS0FBSyxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUN0RSxVQUFNLEdBQUcsSUFBSSxNQUFNLENBQUMsb0JBQW9CLENBQUMsQ0FBQztJQUMxQyxZQUFRLEdBQUcsVUFBVSxDQUFDLGlCQUFpQixFQUFFLENBQUM7SUFDdkQsSUFBQSxNQUFNLENBQUMsV0FBVyxDQUFDO1FBQ2YsSUFBSSxFQUFFLE1BQU07UUFDWixLQUFLLEVBQUwsSUFBQSxLQUFLO1FBQ0wsVUFBVSxFQUFFLElBQUEsU0FBUyxDQUFDLE9BQU8sRUFBRTtRQUMvQixRQUFRLEVBQVIsSUFBQSxRQUFRO0tBQ0ksQ0FBQyxDQUFDO0lBRWxCLGVBQWUsS0FBYSxFQUFFLEdBQVc7UUFDckMsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDO1FBQ2YsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDO1lBQzVELEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3JDLENBQUM7UUFDRCxNQUFNLENBQUMsR0FBRyxDQUFDO0lBQ2YsQ0FBQztBQUVMLENBQUMsRUF6QlMsR0FBRyxLQUFILEdBQUcsUUF5QloiLCJzb3VyY2VzQ29udGVudCI6WyJuYW1lc3BhY2UgQXBwIHtcclxuXHJcbiAgICBleHBvcnQgY29uc3QgdHJhaW5pbmdDb3BpZXMgPSAxMDA7XHJcblxyXG4gICAgZXhwb3J0IGNvbnN0IGlucHV0QXJlYSA9IG5ldyBJbnB1dEFyZWEoJyNpbnB1dC1hcmVhJyk7XHJcbiAgICBleHBvcnQgY29uc3Qgb3V0cHV0QXJlYSA9IG5ldyBEaXNwbGF5QXJlYSgnI291dHB1dC1hcmVhJyk7XHJcblxyXG4gICAgZXhwb3J0IGNvbnN0IGNoYXJzID0gcmFuZ2UoJ2EnLCAneicpLmNvbmNhdChyYW5nZSgnQScsICdaJyksIHJhbmdlKCcwJywgJzknKSwgJyAnKTtcclxuICAgIGV4cG9ydCBjb25zdCB3b3JrZXIgPSBuZXcgV29ya2VyKCdvdXQtd29ya2VyL21haW4uanMnKTtcclxuICAgIGV4cG9ydCBjb25zdCBpbml0RGF0YSA9IEFwcFN0b3JhZ2UuZ2V0UGVyY2VwdHJvbkRhdGEoKTtcclxuICAgIHdvcmtlci5wb3N0TWVzc2FnZSh7XHJcbiAgICAgICAgdHlwZTogJ2luaXQnLFxyXG4gICAgICAgIGNoYXJzLFxyXG4gICAgICAgIGlucHV0Q291bnQ6IGlucHV0QXJlYS5nZXRTaXplKCksXHJcbiAgICAgICAgaW5pdERhdGFcclxuICAgIH0gYXMgTWFpbk1lc3NhZ2UpO1xyXG5cclxuICAgIGZ1bmN0aW9uIHJhbmdlKHN0YXJ0OiBzdHJpbmcsIGVuZDogc3RyaW5nKSB7XHJcbiAgICAgICAgY29uc3QgcmVzID0gW107XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IHN0YXJ0LmNoYXJDb2RlQXQoMCk7IGkgPD0gZW5kLmNoYXJDb2RlQXQoMCk7IGkrKykge1xyXG4gICAgICAgICAgICByZXMucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKGkpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlcztcclxuICAgIH1cclxuXHJcbn1cclxuIl19